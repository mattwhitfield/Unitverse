// ! Delegate Generation
// $ Demonstrates how Unitverse generates default values for method parameters when the parameter is a delegate type

namespace Unitverse.Examples
{
    using System;

    public class SomeClass
    {
        public SomeClass(int val)
        {
            Val = val;
        }

        public int Val { get; }
    }

	public delegate SomeClass HasOutParamAndReturnType(SomeClass input, out string output);

	public delegate void HasOutParam(string input, out string output);

	public delegate void HasAllTheThings(string input, out string output, ref string r1, in string s3);

	public delegate void HasRefParam(string input, ref string output);

	public delegate void HasOnlyOutParam(out string output);
	
	public delegate void HasOnlyRefParam(ref string output);

    public static class TestClass
    {
        public static void ThisIsAMethod(HasOutParamAndReturnType action)
	    {
	    }

        public static void ThisIsAMethod(HasAllTheThings action)
	    {
	    }

        public static void ThisIsAMethod(HasOutParam action)
	    {
	    }

        public static void ThisIsAMethod(HasRefParam action)
	    {
	    }

        public static void ThisIsAMethod(HasOnlyOutParam action)
	    {
	    }

        public static void ThisIsAMethod(HasOnlyRefParam action)
	    {
	    }

        public static void ThisIsAMethod(Func<string> func)
        {
        }

        public static void ThisIsAMethod2(Func<string, SomeClass> func)
        {
        }

        public static void ThisIsAMethod3(Func<int, string, SomeClass> func)
        {
        }

        public static void ThisIsAMethod4(Func<int, int, string, SomeClass> func)
        {
        }

        public static void ThisIsAMethod5(Func<int, int, int, string, SomeClass> func)
        {
        }

        public static void ThisIsAMethod6(Action action)
        {
        }

        public static void ThisIsAMethod7(Action<SomeClass> action)
        {
        }

        public static void ThisIsAMethod8(Action<SomeClass, int> action)
        {
        }

        public static void ThisIsAMethod9(Action<SomeClass, int, int> action)
        {
        }

        public static void ThisIsAMethod10(Action<SomeClass, int, int, int> action)
        {
        }

        public static void ThisIsAMethod11(Action<SomeClass, int, int, int, int> action)
        {
        }
    }
}