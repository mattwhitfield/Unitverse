//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Unitverse.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Unitverse.Core.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find the required mocking framework.
        /// </summary>
        internal static string FrameworkSetFactory_Create_Couldn_t_find_the_required_mocking_framework {
            get {
                return ResourceManager.GetString("FrameworkSetFactory_Create_Couldn_t_find_the_required_mocking_framework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find the required testing framework.
        /// </summary>
        internal static string FrameworkSetFactory_Create_Couldn_t_find_the_required_testing_framework {
            get {
                return ResourceManager.GetString("FrameworkSetFactory_Create_Couldn_t_find_the_required_testing_framework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only emit literals for strings and numeric expressions.
        /// </summary>
        internal static string Generate_Literal_Can_only_emit_literals_for_strings_and_numeric_expressions {
            get {
                return ResourceManager.GetString("Generate_Literal_Can_only_emit_literals_for_strings_and_numeric_expressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find type identifier..
        /// </summary>
        internal static string NameExtractor_GetClassName_Could_not_find_type_identifier_ {
            get {
                return ResourceManager.GetString("NameExtractor_GetClassName_Could_not_find_type_identifier_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot not derive target file name, please check the test file naming setting..
        /// </summary>
        internal static string TargetNameTransform_GetTargetFileName_Cannot_not_derive_target_file_name__please_check_the_test_file_naming_setting_ {
            get {
                return ResourceManager.GetString("TargetNameTransform_GetTargetFileName_Cannot_not_derive_target_file_name__please_" +
                        "check_the_test_file_naming_setting_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot not derive target project name, please check the test project naming setting..
        /// </summary>
        internal static string TargetNameTransform_GetTargetProjectName_Cannot_not_derive_target_project_name__please_check_the_test_project_naming_setting_ {
            get {
                return ResourceManager.GetString("TargetNameTransform_GetTargetProjectName_Cannot_not_derive_target_project_name__p" +
                        "lease_check_the_test_project_naming_setting_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot not derive target type name, please check the test type naming setting..
        /// </summary>
        internal static string TargetNameTransform_GetTargetTypeName_Cannot_not_derive_target_type_name__please_check_the_test_type_naming_setting_ {
            get {
                return ResourceManager.GetString("TargetNameTransform_GetTargetTypeName_Cannot_not_derive_target_type_name__please_" +
                        "check_the_test_type_naming_setting_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find symbol&apos;s owning type.
        /// </summary>
        internal static string TestableItemExtractor_ExtractSingleItem_Could_not_find_symbol_s_owning_type {
            get {
                return ResourceManager.GetString("TestableItemExtractor_ExtractSingleItem_Could_not_find_symbol_s_owning_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot mutate name more than once.
        /// </summary>
        internal static string TestableModel_MutateName_Cannot_mutate_name_more_than_once {
            get {
                return ResourceManager.GetString("TestableModel_MutateName_Cannot_mutate_name_more_than_once", resourceCulture);
            }
        }
    }
}
